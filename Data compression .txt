import numpy as np
from sklearn import linear_model
from sklearn.svm import SVR
from sklearn.model_selection import train_test_split
import pandas as pd
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.linear_model import LinearRegression

from sklearn.model_selection import train_test_split
from matplotlib import pyplot as plt
df=pd.read_csv("Book1.csv")
df
df=pd.read_csv("Book2.csv")
df
x = df.iloc[:, :-1].values
print(x)
y = df.iloc[:, 2].values
print(y)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=1/3, random_state=0)
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix


clf = SVC(kernel='linear')
clf.fit(x_train,y_train)
y_pred = clf.predict(x_test)
print(accuracy_score(y_test,y_pred))
print(confusion_matrix(y_test, y_pred))

original_ff=input("enter input file size: ")
ftype=input("enter file type: (0-txt,1-img,2-pdf,3-docx)")
columns = ['original file','type'] 
values = np.array([original_ff,ftype])
pred = pd.DataFrame(values.reshape(-1, len(values)),columns=columns)
# print(pred.dtype)
print(pred)

prediction = clf.predict(pred)
print(prediction)
from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier(criterion = 'entropy')
clf.fit(x_train, y_train)
y_pred =  clf.predict(x_test)
print(accuracy_score(y_test,y_pred))
print(confusion_matrix(y_test, y_pred))

x = df.iloc[:, :-5].values
print(x)
y = df.iloc[:, :5].values
print(y)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=1/3, random_state=0)
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix


clf = SVC(kernel='linear')
clf.fit(x_train,y_train)
y_pred = clf.predict(x_test)
print(accuracy_score(y_test,y_pred))
print(confusion_matrix(y_test, y_pred))
